\macro[\cow_c{...}]{\code[cowel]{\put}}
\macro[\cow_html{...}]{\code[html]{\put}}
\macro[\cow_dir{...}]{\cow_c{\hl[markup-tag]{\\\put}}}
\macro[\cow_cp{...}]{U+\put\c{nbsp}(\tt{\U{\put}})}
\macro[\cow_attr{...}]{\tt{\hl[markup-attr]{\put}}}

\there[std.head]{
\html-title{COWEL - Compact Web Language Documentation}
}

\h1[id=compact-web-language]{Compact Web Language (COWEL)}

\html-div[id=github]{
\style{
h1 {
    margin-bottom: 0;
}

#github {
    font-size: 125%;
    margin-bottom: 3em;
}
}
\ref[https://github.com/eisenwave/cowel]
}

\h2[listed=no]{Contents}

\make-contents

\h2{Introduction}

COWEL is a markup language with TeX-like syntax,
intended to generate HTML documents,
mainly for proposals and technical text.
Many of its features are purpose-built for use in WG21,
such as for writing C++ proposals.

\Bex{
The following COWEL code ...
\codeblock[cowel]{
Hello, \\strong{strong} world!
}
... generates the HTML ...
\codeblock[html]{
Hello, <strong>strong</strong> world!
}
... which renders as:
\Bindent{
Hello, \strong{strong} world!
}
}

\h2{Motivation}

Many similar tools (mpark/wg21, bikeshed, etc.)
are based on Markdown.
This makes them beginner-friendly,
but advanced formatting requires heavy use of Markdown extensions
or mixed use of Markdown and HTML tags.
Metadata such as bibliographies, document information, etc.
also rely on yet another format (e.g. JSON, YAML).

This makes these tools difficult to master and makes the design incoherent.
Why do we need three languages glued together just to format our documents?

COWEL is the missing middle, the missing link.
It makes producing HTML a natural part of the language,
lets you specify metadata,
and more, all in one, simple syntax.

\h2{Getting started}

COWEL is still early in development,
and not available in any package manager yet.
To install it and run COWEL:
\codeblock[sh]{
git clone https://github.com/Eisenwave/cowel.git --recursive
cd cowel
cmake -B build
cmake --build build
./build/cowel-cli INPUT.cow OUTPUT.html
}

\Btip{
It is recommended to use a \tt{.cow} or \tt{.cowel} file extension for COWEL documents.

Many text editors support associating such file extensions
with TeX or LaTeX syntax highlighting,
whose syntax is similar enough to get \em{some} basic highlighting.

A VSCode plugin for proper highlighting is planned, among other features.
}

\import{intro/syntax.cow}
\import{intro/directives.cow}
\import{intro/themes.cow}

\h2{List of directives}

\import{directives/comments.cow}
\import{directives/formatting.cow}
\import{directives/code.cow}
\import{directives/math.cow}
\import{directives/separators.cow}
\import{directives/chars.cow}
\import{directives/special.cow}
\import{directives/lists-tables-headings.cow}
\import{directives/references.cow}
\import{directives/foreign.cow}
\import{directives/paragraphs.cow}
\import{directives/sections.cow}
\import{directives/files.cow}
\import{directives/macros.cow}
\import{directives/misc.cow}
\import{directives/calc.cow}
